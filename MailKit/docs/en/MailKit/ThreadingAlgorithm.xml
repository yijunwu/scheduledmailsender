<Type Name="ThreadingAlgorithm" FullName="MailKit.ThreadingAlgorithm">
  <TypeSignature Language="C#" Value="public enum ThreadingAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadingAlgorithm extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            An enumeration of threading algorithms.
            </summary>
    <remarks>
            A threading algorithm is used to group messages and their
            replies together.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="OrderedSubject">
      <MemberSignature Language="C#" Value="OrderedSubject" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.ThreadingAlgorithm OrderedSubject = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.ThreadingAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Thread messages based on their Subject headers.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="References">
      <MemberSignature Language="C#" Value="References" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype MailKit.ThreadingAlgorithm References = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.ThreadingAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Threads messages based on their References, In-Reply-To, and Message-Id headers.
            This algorithm is far better than <see cref="F:MailKit.ThreadingAlgorithm.OrderedSubject" /> but is also more
            expensive to calculate.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>
