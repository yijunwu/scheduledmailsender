<Type Name="IMessageStore" FullName="MailKit.IMessageStore">
  <TypeSignature Language="C#" Value="public interface IMessageStore : IDisposable, MailKit.IMessageService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageStore implements class MailKit.IMessageService, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IMessageService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An interface for retreiving messages from a message store such as IMAP.
            </summary>
    <remarks>
            Implemented by <see cref="T:MailKit.Net.Imap.ImapClient" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Alert">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.AlertEventArgs&gt; Alert;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.AlertEventArgs&gt; Alert" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.AlertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a remote message store receives an alert message from the server.
            </summary>
        <remarks>
            Some implementations, such as <see cref="T:MailKit.Net.Imap.ImapClient" />,
            will emit Alert events when they receive alert messages from the server.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IFolder GetFolder (MailKit.FolderNamespace namespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IFolder GetFolder(class MailKit.FolderNamespace namespace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespace" Type="MailKit.FolderNamespace" />
      </Parameters>
      <Docs>
        <param name="namespace">The namespace.</param>
        <summary>
            Gets the folder for the specified namespace.
            </summary>
        <returns>The folder.</returns>
        <remarks>
            The main reason to get the toplevel folder in a namespace is
            to list its child folders.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespace" /> is <c>null</c>.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The folder could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IFolder GetFolder (MailKit.SpecialFolder folder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IFolder GetFolder(valuetype MailKit.SpecialFolder folder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="folder" Type="MailKit.SpecialFolder" />
      </Parameters>
      <Docs>
        <param name="folder">The type of special folder.</param>
        <summary>
            Gets the specified special folder.
            </summary>
        <returns>The folder if available; otherwise <c>null</c>.</returns>
        <remarks>
            Not all message stores support the concept of special folders,
            so this method may return <c>null</c>.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="folder" /> is out of range.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFolder">
      <MemberSignature Language="C#" Value="public MailKit.IFolder GetFolder (string path, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IFolder GetFolder(string path, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="path">The folder path.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the folder for the specified path.
            </summary>
        <returns>The folder.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> is <c>null</c>.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The folder could not be found.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Inbox">
      <MemberSignature Language="C#" Value="public MailKit.IFolder Inbox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.IFolder Inbox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Inbox folder.
            </summary>
        <value>The Inbox folder.</value>
        <remarks>
            The Inbox folder is the default folder and is typically the folder
            where all new messages are delivered.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection OtherNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection OtherNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the other namespaces.
            </summary>
        <value>The other namespaces.</value>
        <remarks>
            The other folder namespaces contain other mailbox folders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection PersonalNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection PersonalNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the personal namespaces.
            </summary>
        <value>The personal namespaces.</value>
        <remarks>
            The personal folder namespaces contain a user's personal mailbox folders.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedNamespaces">
      <MemberSignature Language="C#" Value="public MailKit.FolderNamespaceCollection SharedNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.FolderNamespaceCollection SharedNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderNamespaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the shared namespaces.
            </summary>
        <value>The shared namespaces.</value>
        <remarks>
            The shared folder namespaces contain mailbox folders that are shared with the user.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
