<Type Name="NullProtocolLogger" FullName="MailKit.NullProtocolLogger">
  <TypeSignature Language="C#" Value="public sealed class NullProtocolLogger : IDisposable, MailKit.IProtocolLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NullProtocolLogger extends System.Object implements class MailKit.IProtocolLogger, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IProtocolLogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A protocol logger that does not log to anywhere.
            </summary>
    <remarks>
            By default, the <see cref="T:MailKit.Net.Smtp.SmtpClient" />,
            <see cref="T:MailKit.Net.Pop3.Pop3Client" />, and
            <see cref="T:MailKit.Net.Imap.ImapClient" /> all use a
            <see cref="T:MailKit.NullProtocolLogger" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullProtocolLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resource used by the <see cref="T:MailKit.NullProtocolLogger" /> object.
            </summary>
        <remarks>Call <see cref="M:MailKit.NullProtocolLogger.Dispose" /> when you are finished using the <see cref="T:MailKit.NullProtocolLogger" />. The
            <see cref="M:MailKit.NullProtocolLogger.Dispose" /> method leaves the <see cref="T:MailKit.NullProtocolLogger" /> in an unusable state. After
            calling <see cref="M:MailKit.NullProtocolLogger.Dispose" />, you must release all references to the <see cref="T:MailKit.NullProtocolLogger" /> so
            the garbage collector can reclaim the memory that the <see cref="T:MailKit.NullProtocolLogger" /> was occupying.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogClient">
      <MemberSignature Language="C#" Value="public void LogClient (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LogClient(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to log.</param>
        <param name="offset">The offset of the first byte to log.</param>
        <param name="count">The number of bytes to log.</param>
        <summary>
            Logs a sequence of bytes sent by the client.
            </summary>
        <remarks>
            This method does nothing.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="LogConnect">
      <MemberSignature Language="C#" Value="public void LogConnect (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LogConnect(class System.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The URI.</param>
        <summary>
            Logs a connection to the specified URI.
            </summary>
        <remarks>
            This method does nothing.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogServer">
      <MemberSignature Language="C#" Value="public void LogServer (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LogServer(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to log.</param>
        <param name="offset">The offset of the first byte to log.</param>
        <param name="count">The number of bytes to log.</param>
        <summary>
            Logs a sequence of bytes sent by the server.
            </summary>
        <remarks>
            This method does nothing.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>
