<Type Name="ImapFolder" FullName="MailKit.Net.Imap.ImapFolder">
  <TypeSignature Language="C#" Value="public class ImapFolder : MailKit.IFolder, System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImapFolder extends System.Object implements class MailKit.IFolder, class System.Collections.Generic.IEnumerable`1&lt;class MimeKit.MimeMessage&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>MailKit.IFolder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;MimeKit.MimeMessage&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An IMAP folder.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceptedFlags">
      <MemberSignature Language="C#" Value="public MailKit.MessageFlags AcceptedFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.MessageFlags AcceptedFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the accepted flags.
            </summary>
        <value>The accepted flags.</value>
        <remarks>
            The accepted flags are the message flags that will be accepted and persist
            for the current session. For the set of flags that will persist between
            sessions, see the <see cref="P:MailKit.Net.Imap.ImapFolder.PermanentFlags" /> property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Access">
      <MemberSignature Language="C#" Value="public MailKit.FolderAccess Access { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.FolderAccess Access" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the read/write access of the folder.
            </summary>
        <value>The read/write access.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (MailKit.UniqueId[] uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(valuetype MailKit.UniqueId[] uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public void AddFlags (int[] indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(int32[] indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] AddFlags (MailKit.UniqueId[] uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] AddFlags(valuetype MailKit.UniqueId[] uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public int[] AddFlags (int[] indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] AddFlags(int32[] indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to add.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Adds a set of flags to the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.MimeMessage message, MailKit.MessageFlags flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Append (MimeKit.MimeMessage[] messages, MailKit.MessageFlags[] flags, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Append(class MimeKit.MimeMessage[] messages, valuetype MailKit.MessageFlags[] flags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="MimeKit.MimeMessage[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages does not match the number of flags.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; Append (MimeKit.MimeMessage message, MailKit.MessageFlags flags, DateTimeOffset date, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; Append(class MimeKit.MimeMessage message, valuetype MailKit.MessageFlags flags, valuetype System.DateTimeOffset date, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="MimeKit.MimeMessage" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="date" Type="System.DateTimeOffset" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">The message.</param>
        <param name="flags">The message flags.</param>
        <param name="date">The received date of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified message to the folder.
            </summary>
        <returns>The UID of the appended message, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Append (MimeKit.MimeMessage[] messages, MailKit.MessageFlags[] flags, DateTimeOffset[] dates, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Append(class MimeKit.MimeMessage[] messages, valuetype MailKit.MessageFlags[] flags, valuetype System.DateTimeOffset[] dates, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messages" Type="MimeKit.MimeMessage[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags[]" />
        <Parameter Name="dates" Type="System.DateTimeOffset[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messages">The array of messages to append to the folder.</param>
        <param name="flags">The message flags to use for each of the messages.</param>
        <param name="dates">The received dates to use for each of the messages.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Appends the specified messages to the folder.
            </summary>
        <returns>The UIDs of the appended messages, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="messages" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="flags" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="dates" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="messages" /> is null.</para>
          <para>-or-</para>
          <para>The number of messages, flags, and dates do not match.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public MailKit.FolderAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.FolderAttributes Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the folder attributes.
            </summary>
        <value>The folder attributes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Check">
      <MemberSignature Language="C#" Value="public void Check (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Check(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Forces the server to flush its state for the folder.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (bool expunge, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(bool expunge, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expunge" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="expunge">If set to <c>true</c>, expunge.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Closes the folder, optionally expunging the messages marked for deletion.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] CopyTo (MailKit.UniqueId[] uids, MailKit.IFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] CopyTo(valuetype MailKit.UniqueId[] uids, class MailKit.IFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="destination" Type="MailKit.IFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copies the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int[] indexes, MailKit.IFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32[] indexes, class MailKit.IFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="destination" Type="MailKit.IFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Copies the specified messages to the destination folder.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the total number of messages in the folder.
            </summary>
        <value>The total number of messages.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CountChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; CountChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; CountChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the message count changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public MailKit.IFolder Create (string name, bool isMessageFolder, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IFolder Create(string name, bool isMessageFolder, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isMessageFolder" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the folder to create.</param>
        <param name="isMessageFolder">
          <c>true</c> if the folder will be used to contain messages; otherwise <c>false</c>.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Creates a new subfolder with the given name.
            </summary>
        <returns>The created folder.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The <see cref="P:MailKit.Net.Imap.ImapFolder.DirectorySeparator" /> is nil, and thus child folders cannot be created.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Deletes the folder on the IMAP server.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be deleted (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Deleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is deleted.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparator">
      <MemberSignature Language="C#" Value="public char DirectorySeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char DirectorySeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the directory separator.
            </summary>
        <value>The directory separator.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the folder exists.
            </summary>
        <value>
          <c>true</c> if the folder exists; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public void Expunge (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Expunge(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunges the folder, permanently removing all messages marked for deletion.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.Net.Imap.ImapFolder.Expunged" /> event will be emitted for each
            message that is expunged. However, if the IMAP server supports the QRESYNC
            extension and it has been enabled via the
            <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.Net.Imap.ImapFolder.Vanished" /> event will be emitted rather than the
            <see cref="E:MailKit.Net.Imap.ImapFolder.Expunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Expunge">
      <MemberSignature Language="C#" Value="public void Expunge (MailKit.UniqueId[] uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Expunge(valuetype MailKit.UniqueId[] uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The message uids.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Expunges the specified uids, permanently removing them from the folder.
            </summary>
        <remarks>
          <para>Normally, an <see cref="E:MailKit.Net.Imap.ImapFolder.Expunged" /> event will be emitted for each
            message that is expunged. However, if the IMAP server supports the QRESYNC
            extension and it has been enabled via the
            <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method, then
            the <see cref="E:MailKit.Net.Imap.ImapFolder.Vanished" /> event will be emitted rather than the
            <see cref="E:MailKit.Net.Imap.ImapFolder.Expunged" /> event.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The list of uids contained one or more invalid values.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Expunged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessageEventArgs&gt; Expunged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessageEventArgs&gt; Expunged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a message is expunged from the folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (MailKit.UniqueId[] uids, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(valuetype MailKit.UniqueId[] uids, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (int[] indexes, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(int32[] indexes, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (MailKit.UniqueId min, Nullable&lt;MailKit.UniqueId&gt; max, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(valuetype MailKit.UniqueId min, valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; max, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="MailKit.UniqueId" />
        <Parameter Name="max" Type="System.Nullable&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum UID.</param>
        <param name="max">The maximum UID, or <c>null</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two UIDs, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="min" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (MailKit.UniqueId[] uids, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(valuetype MailKit.UniqueId[] uids, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message UIDs that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the IMAP server supports the QRESYNC extension and the application has
            enabled this feature via <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.Net.Imap.ImapFolder.Vanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="uids" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (int min, int max, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(int32 min, int32 max, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes, inclusive.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (int[] indexes, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(int32[] indexes, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the specified message indexes that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ArgumentException">
            One or more of the <paramref name="indexes" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (MailKit.UniqueId min, Nullable&lt;MailKit.UniqueId&gt; max, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(valuetype MailKit.UniqueId min, valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="MailKit.UniqueId" />
        <Parameter Name="max" Type="System.Nullable&lt;MailKit.UniqueId&gt;" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum UID.</param>
        <param name="max">The maximum UID.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two UIDs (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>
          <para>If the IMAP server supports the QRESYNC extension and the application has
            enabled this feature via <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" />,
            then this method will emit <see cref="E:MailKit.Net.Imap.ImapFolder.Vanished" /> events for messages that have vanished
            since the specified mod-sequence value.</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="min" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="items" /> is empty.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Fetch">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt; Fetch (int min, int max, ulong modseq, MailKit.MessageSummaryItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.MessageSummary&gt; Fetch(int32 min, int32 max, unsigned int64 modseq, valuetype MailKit.MessageSummaryItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.MessageSummary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min" Type="System.Int32" />
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="items" Type="MailKit.MessageSummaryItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="min">The minimum index.</param>
        <param name="max">The maximum index, or <c>-1</c> to specify no upper bound.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="items">The message summary items to fetch.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Fetches the message summaries for the messages between the two indexes (inclusive) that have a higher mod-sequence value than the one specified.
            </summary>
        <returns>An enumeration of summaries for the requested messages.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="min" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="max" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="items" /> is empty.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FirstUnread">
      <MemberSignature Language="C#" Value="public int FirstUnread { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstUnread" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the index of the first unread message in the folder.
            </summary>
        <value>The index of the first unread message.</value>
        <remarks>
            This value will only be set after the folder has been opened.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the full name of the folder.
            </summary>
        <value>The full name of the folder.</value>
        <remarks>
            This is the equivalent of the full path of a file on a file system.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (MailKit.UniqueId uid, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyPart">
      <MemberSignature Language="C#" Value="public MimeKit.MimeEntity GetBodyPart (int index, MailKit.BodyPart part, bool headersOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeEntity GetBodyPart(int32 index, class MailKit.BodyPart part, bool headersOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="headersOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The body part.</param>
        <param name="headersOnly">
          <c>true</c> if only the headers should be downloaded; otherwise, <c>false</c>&gt;</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified body part.
            </summary>
        <returns>The body part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class MimeKit.MimeMessage&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;MimeKit.MimeMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the messages in the folder.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public MimeKit.MimeMessage GetMessage (MailKit.UniqueId uid, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(valuetype MailKit.UniqueId uid, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uid" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMessage">
      <MemberSignature Language="C#" Value="public MimeKit.MimeMessage GetMessage (int index, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MimeKit.MimeMessage GetMessage(int32 index, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MimeKit.MimeMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified message.
            </summary>
        <returns>The message.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> is out of range.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (MailKit.UniqueId uid, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (int index, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 index, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified message.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the message. If the starting offset is beyond
            the end of the message, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the message, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (MailKit.UniqueId uid, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(valuetype MailKit.UniqueId uid, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="MailKit.UniqueId" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uid">The UID of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="uid" /> is invalid.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (int index, MailKit.BodyPart part, int offset, int count, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream(int32 index, class MailKit.BodyPart part, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="part" Type="MailKit.BodyPart" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="index">The index of the message.</param>
        <param name="part">The desired body part.</param>
        <param name="offset">The starting offset of the first desired byte.</param>
        <param name="count">The number of bytes desired.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets a substream of the specified body part.
            </summary>
        <returns>The stream.</returns>
        <remarks>
            Fetches a substream of the body part. If the starting offset is beyond
            the end of the body part, an empty stream is returned. If the number of
            bytes desired extends beyond the end of the body part, a truncated stream
            will be returned.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> is out of range.</para>
          <para>-or-</para>
          <para>
            <paramref name="offset" /> is negative.</para>
          <para>-or-</para>
          <para>
            <paramref name="count" /> is negative.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolder">
      <MemberSignature Language="C#" Value="public MailKit.IFolder GetSubfolder (string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.IFolder GetSubfolder(string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="name">The name of the subfolder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the specified subfolder.
            </summary>
        <returns>The subfolder, if available; otherwise, <c>null</c>.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is either an empty string or contains the <see cref="P:MailKit.Net.Imap.ImapFolder.DirectorySeparator" />.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
        <exception cref="T:MailKit.FolderNotFoundException">
            The requested folder could not be found.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubfolders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;MailKit.IFolder&gt; GetSubfolders (bool subscribedOnly, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class MailKit.IFolder&gt; GetSubfolders(bool subscribedOnly, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;MailKit.IFolder&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscribedOnly" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscribedOnly">If set to <c>true</c>, only subscribed folders will be listed.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Gets the subfolders.
            </summary>
        <returns>The subfolders.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="HighestModSeq">
      <MemberSignature Language="C#" Value="public ulong HighestModSeq { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 HighestModSeq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the highest mod-sequence value of all messages in the mailbox.
            </summary>
        <value>The highest mod-sequence value.</value>
        <remarks>
            This property is only available if the IMAP server supports the CONDSTORE extension.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespace">
      <MemberSignature Language="C#" Value="public bool IsNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether or not the folder is a namespace folder.
            </summary>
        <value>
          <c>true</c> if the folder is a namespace folder; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the folder is currently open.
            </summary>
        <value>
          <c>true</c> if the folder is currently open; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the folder is subscribed.
            </summary>
        <value>
          <c>true</c> if the folder is subscribed; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFlagsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessageFlagsChangedEventArgs&gt; MessageFlagsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessageFlagsChangedEventArgs&gt; MessageFlagsChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessageFlagsChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when flags changed on a message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] MoveTo (MailKit.UniqueId[] uids, MailKit.IFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] MoveTo(valuetype MailKit.UniqueId[] uids, class MailKit.IFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="destination" Type="MailKit.IFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Moves the specified messages to the destination folder.
            </summary>
        <returns>The UIDs of the messages in the destination folder, if available; otherwise, <c>null</c>.</returns>
        <remarks>
          <para>If the IMAP server supports the MOVE command, then the MOVE command will be used. Otherwise,
            the messages will first be copied to the destination folder, then marked as \Deleted in the
            originating folder, and finally expunged. Since the server could disconnect at any point between
            those 3 operations, it may be advisable to implement your own logic for moving messages in this
            case in order to better handle spontanious server disconnects and other error conditions.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="uids" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the UIDPLUS extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (int[] indexes, MailKit.IFolder destination, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveTo(int32[] indexes, class MailKit.IFolder destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="destination" Type="MailKit.IFolder" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages to copy.</param>
        <param name="destination">The destination folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Moves the specified messages to the destination folder.
            </summary>
        <remarks>
          <para>If the IMAP server supports the MOVE command, then the MOVE command will be used. Otherwise,
            the messages will first be copied to the destination folder and then marked as \Deleted in the
            originating folder. Since the server could disconnect at any point between those 2 operations, it
            may be advisable to implement your own logic for moving messages in this case in order to better
            handle spontanious server disconnects and other error conditions.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="indexes" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="destination" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>One or more of the <paramref name="indexes" /> is invalid.</para>
          <para>-or-</para>
          <para>The destination folder does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the folder.
            </summary>
        <value>The name of the folder.</value>
        <remarks>
            This is the equivalent of the file name of a file on the file system.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public MailKit.FolderAccess Open (MailKit.FolderAccess access, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public MailKit.FolderAccess Open (MailKit.FolderAccess access, MailKit.UniqueId uidValidity, ulong highestModSeq, MailKit.UniqueId[] uids, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype MailKit.FolderAccess Open(valuetype MailKit.FolderAccess access, valuetype MailKit.UniqueId uidValidity, unsigned int64 highestModSeq, valuetype MailKit.UniqueId[] uids, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.FolderAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="MailKit.FolderAccess" />
        <Parameter Name="uidValidity" Type="MailKit.UniqueId" />
        <Parameter Name="highestModSeq" Type="System.UInt64" />
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="access">The requested folder access.</param>
        <param name="uidValidity">The last known <see cref="P:MailKit.Net.Imap.ImapFolder.UidValidity" /> value.</param>
        <param name="highestModSeq">The last known <see cref="P:MailKit.Net.Imap.ImapFolder.HighestModSeq" /> value.</param>
        <param name="uids">The last known list of unique message identifiers.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Opens the folder using the requested folder access.
            </summary>
        <returns>The <see cref="T:MailKit.FolderAccess" /> state of the folder.</returns>
        <remarks>
          <para>This variant of the <see cref="M:MailKit.Net.Imap.ImapFolder.Open(MailKit.FolderAccess,System.Threading.CancellationToken)" />
            method is meant for quick resynchronization of the folder. Before calling this method,
            the <see cref="M:MailKit.Net.Imap.ImapClient.EnableQuickResync(System.Threading.CancellationToken)" /> method MUST be called.</para>
          <para>You should also make sure to add listeners to the <see cref="E:MailKit.Net.Imap.ImapFolder.Vanished" /> and
            <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events to get notifications of changes since
            the last time the folder was opened.</para>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="access" /> is not a valid value.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The QRESYNC feature has not been enabled.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the QRESYNC extension.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ParentFolder">
      <MemberSignature Language="C#" Value="public MailKit.IFolder ParentFolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class MailKit.IFolder ParentFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.IFolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent folder.
            </summary>
        <value>The parent folder.</value>
        <remarks>
            Root-level folders do not have a parent folder.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PermanentFlags">
      <MemberSignature Language="C#" Value="public MailKit.MessageFlags PermanentFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype MailKit.MessageFlags PermanentFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the permanent flags.
            </summary>
        <value>The permanent flags.</value>
        <remarks>
            The permanent flags are the message flags that will persist between sessions.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recent">
      <MemberSignature Language="C#" Value="public int Recent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Recent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of recently added messages.
            </summary>
        <value>The number of recently added messages.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; RecentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; RecentChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the recent message count changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (MailKit.UniqueId[] uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(valuetype MailKit.UniqueId[] uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public void RemoveFlags (int[] indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFlags(int32[] indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] RemoveFlags (MailKit.UniqueId[] uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] RemoveFlags(valuetype MailKit.UniqueId[] uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveFlags">
      <MemberSignature Language="C#" Value="public int[] RemoveFlags (int[] indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] RemoveFlags(int32[] indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to remove.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Removes a set of flags from the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (MailKit.IFolder parent, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rename(class MailKit.IFolder parent, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="MailKit.IFolder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="parent">The new parent folder.</param>
        <param name="name">The new name of the folder.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Renames the folder to exist with a new name under a new parent folder.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="parent" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="parent" /> does not belong to the <see cref="T:MailKit.Net.Imap.ImapClient" />.</para>
          <para>-or-</para>
          <para>
            <paramref name="name" /> is not a legal folder name.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.</para>
          <para>-or-</para>
          <para>The folder cannot be renamed (it is either a namespace or the Inbox).</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.FolderRenamedEventArgs&gt; Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.FolderRenamedEventArgs&gt; Renamed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.FolderRenamedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is renamed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Search (MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Search(class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Search (MailKit.Search.SearchQuery query, MailKit.Search.OrderBy[] orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Search(class MailKit.Search.SearchQuery query, class MailKit.Search.OrderBy[] orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="MailKit.Search.OrderBy[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs in the specified sort order.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="orderBy" /> is empty.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Search (MailKit.UniqueId[] uids, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Search(valuetype MailKit.UniqueId[] uids, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the subset of UIDs in the folder for messages matching the specified query.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains one or more invalid UIDs.
            </exception>
        <exception cref="T:System.NotSupportedException">
            One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] Search (MailKit.UniqueId[] uids, MailKit.Search.SearchQuery query, MailKit.Search.OrderBy[] orderBy, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] Search(valuetype MailKit.UniqueId[] uids, class MailKit.Search.SearchQuery query, class MailKit.Search.OrderBy[] orderBy, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="orderBy" Type="MailKit.Search.OrderBy[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="query">The search query.</param>
        <param name="orderBy">The sort order.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Searches the subset of UIDs in the folder for messages matching the specified query,
            returning them in the preferred sort order.
            </summary>
        <returns>An array of matching UIDs.</returns>
        <remarks>
            The returned array of unique identifiers will be sorted in the preferred order and
            can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="uids" /> contains one or more invalid UIDs.</para>
          <para>-or-</para>
          <para>
            <paramref name="orderBy" /> is empty.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the SORT extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (MailKit.UniqueId[] uids, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(valuetype MailKit.UniqueId[] uids, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public void SetFlags (int[] indexes, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(int32[] indexes, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public MailKit.UniqueId[] SetFlags (MailKit.UniqueId[] uids, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype MailKit.UniqueId[] SetFlags(valuetype MailKit.UniqueId[] uids, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.UniqueId[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The UIDs of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The unique IDs of the messages that were not updated.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uids" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains at least one invalid uid.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public int[] SetFlags (int[] indexes, ulong modseq, MailKit.MessageFlags flags, bool silent, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] SetFlags(int32[] indexes, unsigned int64 modseq, valuetype MailKit.MessageFlags flags, bool silent, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]" />
        <Parameter Name="modseq" Type="System.UInt64" />
        <Parameter Name="flags" Type="MailKit.MessageFlags" />
        <Parameter Name="silent" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="indexes">The indexes of the messages.</param>
        <param name="modseq">The mod-sequence value.</param>
        <param name="flags">The message flags to set.</param>
        <param name="silent">If set to <c>true</c>, no <see cref="E:MailKit.Net.Imap.ImapFolder.MessageFlagsChanged" /> events will be emitted.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Sets the flags of the specified messages only if their mod-sequence value is less than the specified value.
            </summary>
        <returns>The indexes of the messages that were not updated.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="indexes" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="indexes" /> contains at least one invalid index.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open in read-write mode.</para>
        </exception>
        <exception cref="T:System.NotSupportedException">
            The <see cref="T:MailKit.Net.Imap.ImapFolder" /> does not support mod-sequences.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public void Status (MailKit.StatusItems items, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Status(valuetype MailKit.StatusItems items, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="MailKit.StatusItems" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="items">The items to update.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Updates the values of the specified items.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
            The IMAP server does not support the STATUS command.
            </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public void Subscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Subscribes the folder.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Subscribed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Subscribed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is subscribed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsModSeq">
      <MemberSignature Language="C#" Value="public bool SupportsModSeq { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsModSeq" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether or not the folder supports mod-sequences.
            </summary>
        <value>
          <c>true</c> if supports mod-sequences; otherwise, <c>false</c>.</value>
        <remarks>
          <para>If mod-sequences are not supported by the folder, then all of the APIs that take a modseq
            argument will throw <see cref="T:System.NotSupportedException" /> and should not be used.</para>
          <para>There are two reasons that a <see cref="T:MailKit.Net.Imap.ImapFolder" /> might not support mod-sequences:
            <list type="bullet"><item>The IMAP server does not support the CONDSTORE extension (<see cref="F:MailKit.Net.Imap.ImapCapabilities.CondStore" />).</item><item>The SELECT or EXAMINE command returned the NOMODSEQ response code.</item></list></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an enumerator for the messages in the folder.
            </summary>
        <returns>The enumerator.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public MailKit.MessageThread[] Thread (MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.MessageThread[] Thread(valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageThread[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Threads the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="query" /> is <c>null</c>.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Thread">
      <MemberSignature Language="C#" Value="public MailKit.MessageThread[] Thread (MailKit.UniqueId[] uids, MailKit.ThreadingAlgorithm algorithm, MailKit.Search.SearchQuery query, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class MailKit.MessageThread[] Thread(valuetype MailKit.UniqueId[] uids, valuetype MailKit.ThreadingAlgorithm algorithm, class MailKit.Search.SearchQuery query, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.MessageThread[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uids" Type="MailKit.UniqueId[]" />
        <Parameter Name="algorithm" Type="MailKit.ThreadingAlgorithm" />
        <Parameter Name="query" Type="MailKit.Search.SearchQuery" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uids">The subset of UIDs</param>
        <param name="algorithm">The threading algorithm to use.</param>
        <param name="query">The search query.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Threads the messages in the folder that match the search query using the specified threading algorithm.
            </summary>
        <returns>An array of message threads.</returns>
        <remarks>
            The <see cref="P:MailKit.MessageThread.UniqueId" /> can be used with <see cref="M:MailKit.IFolder.GetMessage(MailKit.UniqueId,System.Threading.CancellationToken)" />.
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="algorithm" /> is not supported.
            </exception>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="uids" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="query" /> is <c>null</c>.</para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="uids" /> contains one or more invalid UIDs.
            </exception>
        <exception cref="T:System.NotSupportedException">
          <para>One or more search terms in the <paramref name="query" /> are not supported by the IMAP server.</para>
          <para>-or-</para>
          <para>The server does not support the THREAD extension.</para>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not connected.</para>
          <para>-or-</para>
          <para>The <see cref="T:MailKit.Net.Imap.ImapClient" /> is not authenticated.</para>
          <para>-or-</para>
          <para>The folder is not currently open.</para>
        </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.Net.Imap.ImapFolder" />.
            </summary>
        <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:MailKit.Net.Imap.ImapFolder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UidNext">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; UidNext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; UidNext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the UID that the folder will assign to the next message that is added.
            </summary>
        <value>The next UID.</value>
        <remarks>
            This value will only be set after the folder has been opened.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidValidity">
      <MemberSignature Language="C#" Value="public Nullable&lt;MailKit.UniqueId&gt; UidValidity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype MailKit.UniqueId&gt; UidValidity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;MailKit.UniqueId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the UID validity.
            </summary>
        <value>The UID validity.</value>
        <remarks>
          <para>UIDs are only valid so long as the UID validity value remains unchanged. If and when
            the folder's <see cref="P:MailKit.Net.Imap.ImapFolder.UidValidity" /> is changed, a client MUST discard its cache of UIDs
            along with any summary information that it may have and re-query the folder.</para>
          <para>This value will only be set after the folder has been opened.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidValidityChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; UidValidityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; UidValidityChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the UID validity changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public void Unsubscribe (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            Unsubscribes the folder.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> has been disposed.
            </exception>
        <exception cref="T:System.InvalidOperationException">
            The <see cref="T:MailKit.Net.Imap.ImapClient" /> is either not connected or not authenticated.
            </exception>
        <exception cref="T:System.OperationCanceledException">
            The operation was canceled via the cancellation token.
            </exception>
        <exception cref="T:System.IO.IOException">
            An I/O error occurred.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapProtocolException">
            The server's response contained unexpected tokens.
            </exception>
        <exception cref="T:MailKit.Net.Imap.ImapCommandException">
            The server replied with a NO or BAD response.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Unsubscribed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Unsubscribed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when the folder is unsubscribed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vanished">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;MailKit.MessagesVanishedEventArgs&gt; Vanished;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class MailKit.MessagesVanishedEventArgs&gt; Vanished" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;MailKit.MessagesVanishedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Occurs when a message vanishes from the folder.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
