<Type Name="SaslMechanism" FullName="MailKit.Security.SaslMechanism">
  <TypeSignature Language="C#" Value="public abstract class SaslMechanism" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SaslMechanism extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MailKit</AssemblyName>
    <AssemblyVersion>0.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A SASL authentication mechanism.
            </summary>
    <remarks>
            Authenticating via a SASL mechanism may be a multi-step process.
            To determine if the mechanism has completed the necessary steps
            to authentication, check the <see cref="P:MailKit.Security.SaslMechanism.IsAuthenticated" /> after
            each call to <see cref="M:MailKit.Security.SaslMechanism.Challenge(System.String)" />.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SaslMechanism (Uri uri, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, class System.Net.ICredentials credentials) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="uri">The URI of the service.</param>
        <param name="credentials">The user's credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:MailKit.Security.SaslMechanism" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthMechanismRank">
      <MemberSignature Language="C#" Value="public static readonly string[] AuthMechanismRank;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string[] AuthMechanismRank" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The supported authentication mechanisms in order of strongest to weakest.
            </summary>
        <remarks>
            Use by the various clients when authenticating via SASL to determine
            which order the SASL mechanisms supported by the server should be tried.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public string Challenge (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Challenge(string token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">The server's base64-encoded challenge token.</param>
        <summary>
            Decodes the base64-encoded server challenge and returns the next challenge response encoded in base64.
            </summary>
        <returns>The next base64-encoded challenge response.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:MailKit.Security.SaslException">
            An error has occurred while parsing the server's challenge token.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="protected abstract byte[] Challenge (byte[] token, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] Challenge(unsigned int8[] token, int32 startIndex, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="token">The server's challenge token.</param>
        <param name="startIndex">The index into the token specifying where the server's challenge begins.</param>
        <param name="length">The length of the server's challenge.</param>
        <summary>
            Parses the server's challenge token and returns the next challenge response.
            </summary>
        <returns>The next challenge response.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:MailKit.Security.SaslException">
            An error has occurred while parsing the server's challenge token.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static MailKit.Security.SaslMechanism Create (string mechanism, Uri uri, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MailKit.Security.SaslMechanism Create(string mechanism, class System.Uri uri, class System.Net.ICredentials credentials) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MailKit.Security.SaslMechanism</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mechanism" Type="System.String" />
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="mechanism">The name of the SASL mechanism.</param>
        <param name="uri">The URI of the service to authenticate against.</param>
        <param name="credentials">The user's credentials.</param>
        <summary>
            Create an instance of the specified SASL mechanism using the uri and credentials.
            </summary>
        <returns>An instance of the requested SASL mechanism if supported; otherwise <c>null</c>.</returns>
        <remarks>
            If unsure that a particular SASL mechanism is supported, you should first call
            <see cref="M:MailKit.Security.SaslMechanism.IsSupported(System.String)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="mechanism" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="uri" /> is <c>null</c>.</para>
          <para>-or-</para>
          <para>
            <paramref name="credentials" /> is <c>null</c>.</para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the user's credentials.
            </summary>
        <value>The user's credentials.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the SASL mechanism has finished authenticating.
            </summary>
        <value>
          <c>true</c> if the SASL mechanism has finished authenticating; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported (string mechanism);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupported(string mechanism) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mechanism" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mechanism">The name of the SASL mechanism.</param>
        <summary>
            Determines if the specified SASL mechanism is supported by MailKit.
            </summary>
        <returns>
          <c>true</c> if the specified SASL mechanism is supported; otherwise, <c>false</c>.</returns>
        <remarks>
            Use this method to make sure that a SASL mechanism is supported before calling
            <see cref="M:MailKit.Security.SaslMechanism.Create(System.String,System.Uri,System.Net.ICredentials)" />.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="mechanism" /> is <c>null</c>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="MechanismName">
      <MemberSignature Language="C#" Value="public abstract string MechanismName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MechanismName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the mechanism.
            </summary>
        <value>The name of the mechanism.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the state of the SASL mechanism.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the URI of the service.
            </summary>
        <value>The URI of the service.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
